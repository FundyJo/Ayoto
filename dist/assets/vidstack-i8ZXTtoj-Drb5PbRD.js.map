{"version":3,"file":"vidstack-i8ZXTtoj-Drb5PbRD.js","sources":["../../node_modules/@vidstack/react/prod/chunks/vidstack-i8ZXTtoj.js"],"sourcesContent":["\"use client\"\n\nimport { scoped } from './vidstack-CNjv_Zem.js';\nimport { HTMLMediaProvider, HTMLAirPlayAdapter } from './vidstack-WyKbSRm0.js';\nimport 'react';\nimport '@floating-ui/dom';\n\nclass AudioProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"AUDIO\";\n  get type() {\n    return \"audio\";\n  }\n  airPlay;\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this.media;\n  }\n}\n\nexport { AudioProvider };\n"],"names":[],"mappings":";;;;;;AAOA,MAAM,sBAAsB,kBAAkB;AAAA,EAM5C,YAAY,OAAO,KAAK;AACtB,UAAM,OAAO,GAAG;AANlB,2CAAkB;AAIlB;AAGE,WAAO,MAAM;AACX,WAAK,UAAU,IAAI,mBAAmB,KAAK,OAAO,GAAG;AAAA,IAC3D,GAAO,KAAK,KAAK;AAAA,EACjB;AAAA,EATE,IAAI,OAAO;AACT,WAAO;AAAA,EACX;AAAA,EAQE,QAAQ;AACN,UAAM,MAAO;AACb,QAAI,KAAK,SAAS,QAAS,MAAK,IAAI,OAAO,kBAAkB,IAAI;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EAChB;AACA;","x_google_ignoreList":[0]}